@globalVariableTest: 0.33;
@globalVariableTest2: red;

// Test caching using enabled/disabled pseudo class
.class1 uilabel:enabled {
    alpha: 0.25;
}

.class1 uilabel:disabled {
    alpha: 0.75;
}

.class1 uicontrol:enabled uilabel {
    alpha: 0.33;
}

.class1 uicontrol:disabled uilabel {
    alpha: 0.66;
}

.class2 {
    showsTouchWhenHighlighted: YES;
    alpha: 0.99;
}

.class10 {
    alpha: 0.1;
}

.classTop {
    .classMiddle {
        .class12 {
            alpha: 0.3;
        }

        .class11 {
            alpha: 0.2;
        }
        
        .abc123 {
            alpha: 0.31;
        }
        
        .x123abc {
            alpha: 0.32;
        }

        .zyxvyt {
            alpha: 0.33;
        }
        
        .abc123abc {
            alpha: 0.34;
        }
        
        .x123abc123 {
            alpha: 0.35;
        }
    }
}

.class13 {
    alpha: 0.4;
}

.overwriteTest {
    alpha: 0.5;
    titleLabel.alpha: 0.25;
}

.attributedTextTest {
    alpha: 0.5;
    font: HelveticaNeue-Bold 10;
    textColor: #998877;
}

UIView.disabledStylingTest {
    alpha: 0.5;

    UILabel {
        alpha: 0.5;
    }
}

.cascadingStylePropertyOverrideWithDefault1 {
    alpha: 0.666;
}

.cascadingStylePropertyOverrideWithDefault2 {
    alpha: current;
}

.testDisableProperty {
    alpha: 0.5;
}

.labelAttributedTextTest {
    attributedText: "text" (font: HelveticaNeue-Medium 12, color: blue);
}

.buttonAttributedTitleTest {
    attributedTitle: "text" (font: HelveticaNeue-Medium 12, color: blue);
    attributedTitle(highlighted): "text" (font: HelveticaNeue-Medium 12, color: red);
}

.shadowTest1 {
    layer.shadowColor: red;
    shadowOffset: size(1,2);
    shadowOpacity: 0.5;
    shadowRadius: 10;
}

.shadowTest2 {
    shadowColor: red;
    shadowOffset: size(1,2);
}

.sizeToFitTest1 {
    frame: sizeToFit().top(10).left(20));
}

.sizeToFitTest2 {
    frame: sizeToFit(100%, 100%).bottom(10).right(20);
}

.sizeToFitTest3 {
    frame: sizeToFit(5, 5);
}

.centeredRectTest1 {
    frame: size(auto, auto).insets(auto, auto, auto, auto); // Centering with auto width/height
}

.centeredRectTest2 {
    frame: size(100, 100).insets(auto, auto, auto, auto); // Centering with fixed width/height
}

.centeredRectTest3 {
    frame: size(50%, 50%).left(auto).right(auto).top(auto).bottom(auto); // Centering with relative width/height
}

.centeredRectTest4 {
    frame: size(50%, 50%).left(auto).right(auto).top(42); // Only horizontal centering
}

.centeredRectTest5 {
    frame: size(50%, 50%).top(auto).bottom(auto).left(42); // Only vertical centering
}

.centeredRectTest6 {
    frame: size(auto, auto).left(auto).right(50).top(auto).bottom(50); // Only single auto inset per axix
}

.centeredRectTest7 {
    frame: size(auto, auto).left(50).right(auto).top(50).bottom(auto); // Only single auto inset per axix
}

.collectionViewTest {
    minimumLineSpacing: 42;
}


#layoutElement1 {
    layout: size(100, 100), left(parent + 10), top(parent + 10);
}
#layoutElement2 {
    layout: size(100, 100), left(layoutElement1), top(layoutElement1);
}
#layoutElement3 {
    layout: size(100, 100), left(layoutElement4), top(layoutElement1);
}
#layoutElement4 {
    layout: size(100, 100), left(layoutElement3), top(layoutElement1);
}


.typeSelectorAndPrefixedPropertyTest {
    UILabel {
        font: GillSans 1;
    }

    UIButton {
        titleLabel.font: GillSans 2;
    }
}

UIBarButtonItem.prefixedPropertyOnNonUIViewClass {
    customView.alpha: 0.5;
}


.textInputTraits {
    keyboardType: numberPad;
    returnKeyType: done;
}

UIView .testSpecificity2 {
    alpha: 0.75;
}

#someElementId .testSpecificity1 {
    alpha: 0.5;
}

.testSpecificity1 {
    alpha: 0.25;
}


.overridePropertyDefinitionStyle {
    text: "Monday";
}
