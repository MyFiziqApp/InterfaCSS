{"name":"InterfaCSS","tagline":"CSS based styling and layout for iOS","body":"> *What if you could style and layout your app in a concise and powerful way, without constantly having to repeat yourself. What if things could be more like the web?*   \r\n   \r\n   \r\n   \r\n# Welcome to InterfaCSS\r\n\r\n## Simple yet powerful styling\r\nInterfaCSS uses an easy to understand styling [***syntax***](https://github.com/tolo/InterfaCSS/wiki/Stylesheet-format) that is based on the the familiar ***CSS*** styling language used on the web (augmented with some *Sass/Less*-like features, such as *nested declarations* and *variables*), which means that you (and your designer) will probably feel right at home.\r\n\r\n\r\n```css\r\n.standardButton {\r\n   backgroundColor: image(\"patternImageAsColor.png\");\r\n   borderWidth: 3;\r\n   borderColor: fadeout(magenta, 75%);\r\n   cornerRadius: @numberVariable;\r\n}\r\n\r\n#helloWorldView {\r\n   backgroundColor: gradient(darken(magenta, 50%), #e4e1e6);\r\n\r\n    .standardButton {\r\n      attributedText: \"Hello \" (foregroundColor: yellow), \"World\" (foregroundColor: #0000ff);\r\n      transform: rotate(15);\r\n   }\r\n}\r\n\r\nBraveNewViewController UITableViewCell .standardButton:landscape {\r\n    titleColor: #7e00ff;\r\n    titleColor(selected): #ff6d10;\r\n}\r\n```\r\n\r\n\r\n## Flexible layouts, the easy way\r\nInterfaCSS lets you define [layouts](https://github.com/tolo/InterfaCSS/wiki/Using-InterfaCSS#layout-of-views) based on values that depend on the position and size of other elements. Layouts are expressed directly in the stylesheet file, and the format is very easy to understand.\r\n\r\n```css\r\n#view1 {\r\n    layout: size(25, 25), left(parent.leftMargin), top(parent.topMargin);\r\n}\r\n\r\n#view2 {\r\n    layout: size(view1, view1), left(view1.right + 10), top(view1.top);\r\n}\r\n```\r\n\r\nIn addition, using a [view builder](https://github.com/tolo/InterfaCSS/wiki/Using-InterfaCSS#creating-a-view-hierarchy), setting up the UI in your view controllers is a breeze - gone are the days of writing tedious UI setup code or fiddling with unwieldy xib-files or storyboards (but you can still use them just fine with InterfaCSS if you want of course) - simply define your UI in an XML file or do it in code, by using [`ISSViewBuilder`](InterfaCSS/UI/ISSViewBuilder.h).\r\n\r\n*XML:*\r\n```xml\r\n<view id=\"rootView\">\r\n    <view id=\"view1\"/>\r\n    <view id=\"view2\" layout=\"size(view1, view1), left(view1.right + 10), top(view1.top)\"/> <!-- It's possible to define layouts here as well -->\r\n</view>\r\n```\r\n\r\n*In code (Swift):*\r\n```Swift\r\nself.view = ISSViewBuilder.rootViewWithId(\"rootView\", withOwner: self, andSubViews: {\r\n    return [\r\n        ISSViewBuilder.viewWithId(\"view1\"),\r\n        ISSViewBuilder.viewWithId(\"view2\"),\r\n    ];\r\n})\r\n```\r\n\r\n\r\n## Stylesheets - standard, scoped, *\"live\"*\r\nUse as many stylesheets as you find appropriate in your app. If you want, you can also limit the scope of a stylesheet, to make sure it's only used in specific view controllers for instance.\r\n\r\n```objective-c\r\nISSStyleSheetScope* scope = [ISSStyleSheetScope scopeWithViewControllerClass:BraveNewViewController.class];\r\n[[InterfaCSS sharedInstance] loadStyleSheetFromMainBundleFile:@\"stylesForOnePartOfTheApp.css\" withScope:scope];\r\n```\r\n\r\nFor development, you can also load \"live\", auto-refreshable stylesheets, which can be very useful to avoid those pesky `compile`/`deploy`/`launch`/`returnToWhereYouWere`-cycles when you are fine-tuning your styles. Auto-refreshable stylesheets can either be loaded from a ***local file*** (that will be monitored for changes) or from a file located on a ***remote (HTTP) server*** (that will be polled at regular intervals).\r\n\r\n```objective-c\r\n   [[InterfaCSS interfaCSS] loadRefreshableStyleSheetFromURL:\r\n       [NSURL URLWithString:@\"http://www.mygroovycloudprovider.com/user/directory/mymyDazzlingStyles.css\"]];\r\n```\r\n\r\n\r\n## And there's more - much, much more\r\nCheckout the [GitHub page](https://github.com/tolo/InterfaCSS) and [Wiki](https://github.com/tolo/InterfaCSS/wiki)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}